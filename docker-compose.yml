
services:
  backend:
    build:
      context: .
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_started }

  celery:
    build:
      context: .
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_started }
    restart: on-failure

  db:
    image: postgres:16.9
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes: [redis-data:/data]
    ports: ["6379:6379"]

  prometheus:
    image: bitnami/prometheus:latest
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_USER}
    volumes: [grafana-data:/var/lib/grafana]
    ports: ["3000:3000"]
    depends_on: { prometheus: { condition: service_started } }

volumes:
  db-data:
  redis-data:
  grafana-data: